/*
 OOP 객체 지향 프로그램밍 (여러개의 조각들을(설계도) 만들어서 조합하는 행위)
 >> 여러개의 설계도를 재사용하는 방법.
 
 1. 상속 (재사용성)
 2. 캡슐화(은닉화) : private   ....setter, getter (직접할당을 막고 간접할당을 통해서 데이터 보호)
 3. 다형성 : 하나의 타입으로 여러개 객체의 주소를 가질 수 있는 것.
 
 >> method overloading (오버로딩)
 
 */
public class Ex13_Method_Overloading {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
